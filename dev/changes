#!/usr/bin/env perl

use strict;
use warnings;

use Venus::Path;
use Venus::Json;
use Venus::Template;

my $file = 'CHANGES';
my $path = Venus::Path->new;
my $json = Venus::Json->new;

my $cpan = q(
{{for releases}}
{{version}} {{date}}

{{for changes}}
- [{{type}}] (#{{github.issue}}) {{name}}
{{end changes}}

{{end releases}}
);

my $markdown = q(
{{for releases}}
## Release [{{version}}](https://github.com/cpanery/venus/releases/tag/{{version}})

{{for changes}}
- [{{type}}] {{name}} {{if github.issue}}([#{{github.issue}}](https://github.com/cpanery/venus/issues/{{github.issue}})){{end github.issue}}
{{end changes}}

{{end releases}}
);

my $template = Venus::Template->new(
  variables => {
    releases => $json->decode($path->child("$file.json")->read),
  },
);

$path->child("$file")->write($template->do(set => $cpan)->render);
$path->child("$file.md")->write($template->do(set => $markdown)->render);
